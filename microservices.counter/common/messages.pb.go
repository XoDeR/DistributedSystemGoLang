// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	WorkerGetItemListRequest
	WorkerGetItemListResponse
	WorkerAddNewItemRequest
	WorkerAddNewItemResponse
	GetItemCountByTenantRequest
	GetItemCountByTenantResult
	GetItemCountByTenantResponse
	AddNewItemWithTenantRequest
	AddNewItemWithTenantResult
	AddNewItemWithTenantResponse
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkerGetItemListRequest struct {
	WorkerId uint32 `protobuf:"varint,1,opt,name=workerId" json:"workerId,omitempty"`
	TenantId uint32 `protobuf:"varint,2,opt,name=tenantId" json:"tenantId,omitempty"`
}

func (m *WorkerGetItemListRequest) Reset()                    { *m = WorkerGetItemListRequest{} }
func (m *WorkerGetItemListRequest) String() string            { return proto.CompactTextString(m) }
func (*WorkerGetItemListRequest) ProtoMessage()               {}
func (*WorkerGetItemListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type WorkerGetItemListResponse struct {
	WorkerId uint32   `protobuf:"varint,1,opt,name=workerId" json:"workerId,omitempty"`
	Items    []uint32 `protobuf:"varint,2,rep,packed,name=items" json:"items,omitempty"`
}

func (m *WorkerGetItemListResponse) Reset()                    { *m = WorkerGetItemListResponse{} }
func (m *WorkerGetItemListResponse) String() string            { return proto.CompactTextString(m) }
func (*WorkerGetItemListResponse) ProtoMessage()               {}
func (*WorkerGetItemListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type WorkerAddNewItemRequest struct {
	WorkerId uint32 `protobuf:"varint,1,opt,name=workerId" json:"workerId,omitempty"`
	ItemId   uint32 `protobuf:"varint,2,opt,name=itemId" json:"itemId,omitempty"`
	TenantId uint32 `protobuf:"varint,3,opt,name=tenantId" json:"tenantId,omitempty"`
}

func (m *WorkerAddNewItemRequest) Reset()                    { *m = WorkerAddNewItemRequest{} }
func (m *WorkerAddNewItemRequest) String() string            { return proto.CompactTextString(m) }
func (*WorkerAddNewItemRequest) ProtoMessage()               {}
func (*WorkerAddNewItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type WorkerAddNewItemResponse struct {
	WorkerId uint32 `protobuf:"varint,1,opt,name=workerId" json:"workerId,omitempty"`
	Result   bool   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (m *WorkerAddNewItemResponse) Reset()                    { *m = WorkerAddNewItemResponse{} }
func (m *WorkerAddNewItemResponse) String() string            { return proto.CompactTextString(m) }
func (*WorkerAddNewItemResponse) ProtoMessage()               {}
func (*WorkerAddNewItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetItemCountByTenantRequest struct {
	TenantId uint32 `protobuf:"varint,1,opt,name=tenantId" json:"tenantId,omitempty"`
}

func (m *GetItemCountByTenantRequest) Reset()                    { *m = GetItemCountByTenantRequest{} }
func (m *GetItemCountByTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*GetItemCountByTenantRequest) ProtoMessage()               {}
func (*GetItemCountByTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type GetItemCountByTenantResult struct {
	Result uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *GetItemCountByTenantResult) Reset()                    { *m = GetItemCountByTenantResult{} }
func (m *GetItemCountByTenantResult) String() string            { return proto.CompactTextString(m) }
func (*GetItemCountByTenantResult) ProtoMessage()               {}
func (*GetItemCountByTenantResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type GetItemCountByTenantResponse struct {
	Result *GetItemCountByTenantResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *GetItemCountByTenantResponse) Reset()                    { *m = GetItemCountByTenantResponse{} }
func (m *GetItemCountByTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*GetItemCountByTenantResponse) ProtoMessage()               {}
func (*GetItemCountByTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetItemCountByTenantResponse) GetResult() *GetItemCountByTenantResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type AddNewItemWithTenantRequest struct {
	ItemId   uint32 `protobuf:"varint,1,opt,name=itemId" json:"itemId,omitempty"`
	TenantId uint32 `protobuf:"varint,2,opt,name=tenantId" json:"tenantId,omitempty"`
}

func (m *AddNewItemWithTenantRequest) Reset()                    { *m = AddNewItemWithTenantRequest{} }
func (m *AddNewItemWithTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*AddNewItemWithTenantRequest) ProtoMessage()               {}
func (*AddNewItemWithTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type AddNewItemWithTenantResult struct {
	Result bool `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *AddNewItemWithTenantResult) Reset()                    { *m = AddNewItemWithTenantResult{} }
func (m *AddNewItemWithTenantResult) String() string            { return proto.CompactTextString(m) }
func (*AddNewItemWithTenantResult) ProtoMessage()               {}
func (*AddNewItemWithTenantResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type AddNewItemWithTenantResponse struct {
	Result *AddNewItemWithTenantResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *AddNewItemWithTenantResponse) Reset()                    { *m = AddNewItemWithTenantResponse{} }
func (m *AddNewItemWithTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*AddNewItemWithTenantResponse) ProtoMessage()               {}
func (*AddNewItemWithTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AddNewItemWithTenantResponse) GetResult() *AddNewItemWithTenantResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkerGetItemListRequest)(nil), "common.WorkerGetItemListRequest")
	proto.RegisterType((*WorkerGetItemListResponse)(nil), "common.WorkerGetItemListResponse")
	proto.RegisterType((*WorkerAddNewItemRequest)(nil), "common.WorkerAddNewItemRequest")
	proto.RegisterType((*WorkerAddNewItemResponse)(nil), "common.WorkerAddNewItemResponse")
	proto.RegisterType((*GetItemCountByTenantRequest)(nil), "common.GetItemCountByTenantRequest")
	proto.RegisterType((*GetItemCountByTenantResult)(nil), "common.GetItemCountByTenantResult")
	proto.RegisterType((*GetItemCountByTenantResponse)(nil), "common.GetItemCountByTenantResponse")
	proto.RegisterType((*AddNewItemWithTenantRequest)(nil), "common.AddNewItemWithTenantRequest")
	proto.RegisterType((*AddNewItemWithTenantResult)(nil), "common.AddNewItemWithTenantResult")
	proto.RegisterType((*AddNewItemWithTenantResponse)(nil), "common.AddNewItemWithTenantResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for NYTProxyService service

type NYTProxyServiceClient interface {
	GetItemCountByTenant(ctx context.Context, in *GetItemCountByTenantRequest, opts ...grpc.CallOption) (*GetItemCountByTenantResponse, error)
	AddNewItemWithTenant(ctx context.Context, in *AddNewItemWithTenantRequest, opts ...grpc.CallOption) (*AddNewItemWithTenantResponse, error)
}

type nYTProxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewNYTProxyServiceClient(cc *grpc.ClientConn) NYTProxyServiceClient {
	return &nYTProxyServiceClient{cc}
}

func (c *nYTProxyServiceClient) GetItemCountByTenant(ctx context.Context, in *GetItemCountByTenantRequest, opts ...grpc.CallOption) (*GetItemCountByTenantResponse, error) {
	out := new(GetItemCountByTenantResponse)
	err := grpc.Invoke(ctx, "/common.NYTProxyService/GetItemCountByTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nYTProxyServiceClient) AddNewItemWithTenant(ctx context.Context, in *AddNewItemWithTenantRequest, opts ...grpc.CallOption) (*AddNewItemWithTenantResponse, error) {
	out := new(AddNewItemWithTenantResponse)
	err := grpc.Invoke(ctx, "/common.NYTProxyService/AddNewItemWithTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NYTProxyService service

type NYTProxyServiceServer interface {
	GetItemCountByTenant(context.Context, *GetItemCountByTenantRequest) (*GetItemCountByTenantResponse, error)
	AddNewItemWithTenant(context.Context, *AddNewItemWithTenantRequest) (*AddNewItemWithTenantResponse, error)
}

func RegisterNYTProxyServiceServer(s *grpc.Server, srv NYTProxyServiceServer) {
	s.RegisterService(&_NYTProxyService_serviceDesc, srv)
}

func _NYTProxyService_GetItemCountByTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemCountByTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NYTProxyServiceServer).GetItemCountByTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.NYTProxyService/GetItemCountByTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NYTProxyServiceServer).GetItemCountByTenant(ctx, req.(*GetItemCountByTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NYTProxyService_AddNewItemWithTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNewItemWithTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NYTProxyServiceServer).AddNewItemWithTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.NYTProxyService/AddNewItemWithTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NYTProxyServiceServer).AddNewItemWithTenant(ctx, req.(*AddNewItemWithTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NYTProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.NYTProxyService",
	HandlerType: (*NYTProxyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItemCountByTenant",
			Handler:    _NYTProxyService_GetItemCountByTenant_Handler,
		},
		{
			MethodName: "AddNewItemWithTenant",
			Handler:    _NYTProxyService_AddNewItemWithTenant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xcb, 0x4e, 0xb3, 0x40,
	0x14, 0xc7, 0x43, 0x9b, 0x8f, 0x34, 0xe7, 0x4b, 0x35, 0x21, 0x4d, 0x45, 0xea, 0xa2, 0x41, 0x17,
	0x5d, 0xb1, 0xa8, 0x6e, 0x74, 0xa7, 0x2e, 0x0c, 0x89, 0x12, 0xc5, 0x26, 0x8d, 0xee, 0xb0, 0x9c,
	0x28, 0x51, 0x98, 0x3a, 0x33, 0x58, 0xfb, 0xa4, 0xbe, 0x8e, 0x81, 0xe1, 0x5a, 0x07, 0xda, 0xe5,
	0xc9, 0xe4, 0x7f, 0xfb, 0x05, 0x60, 0x2f, 0x44, 0xc6, 0xbc, 0x57, 0x64, 0xd6, 0x92, 0x12, 0x4e,
	0x34, 0x75, 0x41, 0xc2, 0x90, 0x44, 0xa6, 0x0b, 0xfa, 0x9c, 0xd0, 0x77, 0xa4, 0x37, 0xc8, 0x6d,
	0x8e, 0xe1, 0x6d, 0xc0, 0xb8, 0x8b, 0x9f, 0x31, 0x32, 0xae, 0x19, 0xd0, 0x5b, 0xa5, 0x6f, 0xb6,
	0xaf, 0x2b, 0x63, 0x65, 0xd2, 0x77, 0x8b, 0x3b, 0x79, 0xe3, 0x18, 0x79, 0x11, 0xb7, 0x7d, 0xbd,
	0x23, 0xde, 0xf2, 0xdb, 0xbc, 0x83, 0x43, 0x89, 0x27, 0x5b, 0x92, 0x88, 0x61, 0xab, 0xe9, 0x00,
	0xfe, 0x05, 0x1c, 0x43, 0xa6, 0x77, 0xc6, 0xdd, 0x49, 0xdf, 0x15, 0x87, 0x19, 0xc0, 0x81, 0xb0,
	0xbb, 0xf4, 0x7d, 0x07, 0x57, 0x89, 0xe3, 0x2e, 0x0d, 0x87, 0xa0, 0x26, 0xfa, 0xa2, 0x5f, 0x76,
	0xd5, 0x9a, 0x77, 0x37, 0x9a, 0x3b, 0x39, 0x8d, 0x6a, 0xd4, 0x0e, 0xc5, 0x87, 0xa0, 0x52, 0x64,
	0xf1, 0x07, 0x4f, 0xb3, 0x7a, 0x6e, 0x76, 0x99, 0xe7, 0x30, 0xca, 0x18, 0x5c, 0x93, 0x38, 0xe2,
	0x57, 0xeb, 0x59, 0x9a, 0x54, 0xa9, 0x5f, 0x54, 0x51, 0x36, 0xaa, 0x9c, 0x81, 0x21, 0x97, 0x26,
	0xc6, 0x95, 0x40, 0xa1, 0xcb, 0x03, 0x9f, 0xe1, 0xa8, 0x41, 0x25, 0x46, 0x5c, 0xd4, 0x74, 0xff,
	0xa7, 0xa6, 0x25, 0xbe, 0x03, 0xab, 0x39, 0xab, 0xf0, 0x7e, 0x80, 0x51, 0x89, 0x65, 0x1e, 0xf0,
	0xb7, 0xfa, 0x98, 0x92, 0xb7, 0xd2, 0xc8, 0xbb, 0xf3, 0x77, 0xa4, 0xdc, 0x52, 0x32, 0xb2, 0x57,
	0x1d, 0xd9, 0xa0, 0xda, 0x32, 0xb2, 0x39, 0x2b, 0xf7, 0x9e, 0xfe, 0x28, 0xb0, 0xef, 0x3c, 0xcd,
	0xee, 0x29, 0xf9, 0x5e, 0x3f, 0x22, 0xfd, 0x0a, 0x16, 0xa8, 0x79, 0x30, 0x90, 0xe1, 0xd1, 0x8e,
	0xdb, 0xe1, 0xa5, 0x58, 0x8c, 0x93, 0x2d, 0x84, 0x45, 0x65, 0x0f, 0x06, 0xb2, 0x72, 0x65, 0x44,
	0x0b, 0xf9, 0x32, 0xa2, 0x8d, 0xca, 0x8b, 0x9a, 0xfe, 0xf8, 0xa7, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x97, 0x49, 0x68, 0xa3, 0x0a, 0x04, 0x00, 0x00,
}
